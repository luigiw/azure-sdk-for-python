{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":";AAAA,+CAA+C;;AAE/C;;;;;;GAMG;AACU,QAAA,eAAe,GAAG;IAC7B,IAAI,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,QAAQ,CAAC;IACtD,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;IACvB,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEW,QAAA,QAAQ,GAAG,UAAC,IAAY;IACnC,OAAO,IAAI;QACT,CAAC,CAAC,wBAAsB,OAAO,CAAC,GAAG,CAAC,gBAAgB,cAAS,OAAO,CAAC,GAAG,CAAC,uBAAuB,SAAI,IAAM;QAC1G,CAAC,CAAC,EAAE,CAAC;AACT,CAAC,CAAC;AAEW,QAAA,UAAU,GAAG,UAAC,IAAY;IACrC,OAAO,IAAI;QACT,CAAC,CAAC,wBACE,OAAO,CAAC,GAAG,CAAC,gBAAgB,cACrB,uBAAe,EAAE,SAAI,IAAM;QACtC,CAAC,CAAC,EAAE,CAAC;AACT,CAAC,CAAC;AAEW,QAAA,4BAA4B,GAAG,UAAC,QAAgB;IAC3D,IAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IAClD,OAAO,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;AACvD,CAAC,CAAC;AAEF;;;;;GAKG;AACU,QAAA,sBAAsB,GAAG,UAAC,QAAgB;IACrD,IAAM,KAAK,GAAG,UAAU,CAAC;IACzB,OAAO,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAC5C,CAAC,CAAC","sourcesContent":["//move @azure/rest-api-specs-scripts utils here\n\n/**\n * Gets the name of the target branch to which the PR is sent. We are using the environment\n * variable provided by travis-ci. It is called TRAVIS_BRANCH. More info can be found here:\n * https://docs.travis-ci.com/user/environment-variables/#Default-Environment-Variables\n * If the environment variable is undefined then the method returns 'master' as the default value.\n * @returns {string} branchName The target branch name.\n */\nexport const getTargetBranch = (): string => {\n  let result = process.env[\"TRAVIS_BRANCH\"] || \"master\";\n  result = result.trim();\n  return result;\n};\n\nexport const blobHref = (file: string) => {\n  return file\n    ? `https://github.com/${process.env.TRAVIS_REPO_SLUG}/blob/${process.env.TRAVIS_PULL_REQUEST_SHA}/${file}`\n    : \"\";\n};\n\nexport const targetHref = (file: string) => {\n  return file\n    ? `https://github.com/${\n        process.env.TRAVIS_REPO_SLUG\n      }/blob/${getTargetBranch()}/${file}`\n    : \"\";\n};\n\nexport const getRelativeSwaggerPathToRepo = (filePath: string): string => {\n  const position = filePath.search(\"specification\");\n  return filePath.substring(position, filePath.length);\n};\n\n/**\n * For breaking change. Trim file path pattern to github style.\n * E.g. Input: specification/redis/resource-manager/Microsoft.Cache/preview/2019-07-01/redis.json:191:5\n *      Output: specification/redis/resource-manager/Microsoft.Cache/preview/2019-07-01/redis.json#L191:5\n * @param filePath\n */\nexport const getGithubStyleFilePath = (filePath: string): string => {\n  const regex = /(.json:)/;\n  return filePath.replace(regex, \".json#L\");\n};\n"]}